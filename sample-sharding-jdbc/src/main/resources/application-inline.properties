#分库分片+读写分离
sharding.jdbc.datasource.names=master,master0,master1,master0slave0,master1slave0
#主库master0  com.alibaba.druid.pool.DruidDataSource  org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master0.url=jdbc:mysql://10.253.1.22:3306/master0
sharding.jdbc.datasource.master0.username=root
sharding.jdbc.datasource.master0.password=123456
#sharding.jdbc.datasource.master0.filters=stat
#sharding.jdbc.datasource.master0.maxActive=100
#sharding.jdbc.datasource.master0.initialSize=10
#sharding.jdbc.datasource.master0.maxWait=60000
#sharding.jdbc.datasource.master0.minIdle=0
#sharding.jdbc.datasource.master0.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.master0.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master0.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.master0.testWhileIdle=true
#sharding.jdbc.datasource.master0.testOnBorrow=true
#sharding.jdbc.datasource.master0.testOnReturn=false
#sharding.jdbc.datasource.master0.removeAbandoned=true
#sharding.jdbc.datasource.master0.removeAbandonedTimeout=180
#sharding.jdbc.datasource.master0.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.master0.defaultAutoCommit=false
#sharding.jdbc.datasource.master0.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.master0.filter.wall.enabled=true

#从库master0slave0
sharding.jdbc.datasource.master0slave0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master0slave0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master0slave0.url=jdbc:mysql://10.253.1.52:3306/master0slave0
sharding.jdbc.datasource.master0slave0.username=root
sharding.jdbc.datasource.master0slave0.password=123456
#sharding.jdbc.datasource.master0slave0.filters=stat
#sharding.jdbc.datasource.master0slave0.maxActive=100
#sharding.jdbc.datasource.master0slave0.initialSize=10
#sharding.jdbc.datasource.master0slave0.maxWait=60000
#sharding.jdbc.datasource.master0slave0.minIdle=0
#sharding.jdbc.datasource.master0slave0.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.master0slave0.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master0slave0.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.master0slave0.testWhileIdle=true
#sharding.jdbc.datasource.master0slave0.testOnBorrow=true
#sharding.jdbc.datasource.master0slave0.testOnReturn=false
#sharding.jdbc.datasource.master0slave0.removeAbandoned=true
#sharding.jdbc.datasource.master0slave0.removeAbandonedTimeout=180
#sharding.jdbc.datasource.master0slave0.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.master0slave0.defaultAutoCommit=false
#sharding.jdbc.datasource.master0slave0.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.master0slave0.filter.wall.enabled=true

#主库master1
sharding.jdbc.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master1.url=jdbc:mysql://10.253.1.52:3306/master1
sharding.jdbc.datasource.master1.username=root
sharding.jdbc.datasource.master1.password=123456
#sharding.jdbc.datasource.master1.filters=stat
#sharding.jdbc.datasource.master1.maxActive=100
#sharding.jdbc.datasource.master1.initialSize=10
#sharding.jdbc.datasource.master1.maxWait=60000
#sharding.jdbc.datasource.master1.minIdle=0
#sharding.jdbc.datasource.master1.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.master1.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master1.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.master1.testWhileIdle=true
#sharding.jdbc.datasource.master1.testOnBorrow=true
#sharding.jdbc.datasource.master1.testOnReturn=false
#sharding.jdbc.datasource.master1.removeAbandoned=true
#sharding.jdbc.datasource.master1.removeAbandonedTimeout=180
#sharding.jdbc.datasource.master1.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.master1.defaultAutoCommit=false
#sharding.jdbc.datasource.master1.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.master1.filter.wall.enabled=true

#从库master1slave0
sharding.jdbc.datasource.master1slave0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master1slave0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master1slave0.url=jdbc:mysql://10.253.1.22:3306/master1slave0
sharding.jdbc.datasource.master1slave0.username=root
sharding.jdbc.datasource.master1slave0.password=123456
#sharding.jdbc.datasource.master1slave0.filters=stat
#sharding.jdbc.datasource.master1slave0.maxActive=100
#sharding.jdbc.datasource.master1slave0.initialSize=10
#sharding.jdbc.datasource.master1slave0.maxWait=60000
#sharding.jdbc.datasource.master1slave0.minIdle=0
#sharding.jdbc.datasource.master1slave0.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.master1slave0.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master1slave0.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.master1slave0.testWhileIdle=true
#sharding.jdbc.datasource.master1slave0.testOnBorrow=true
#sharding.jdbc.datasource.master1slave0.testOnReturn=false
#sharding.jdbc.datasource.master1slave0.removeAbandoned=true
#sharding.jdbc.datasource.master1slave0.removeAbandonedTimeout=180
#sharding.jdbc.datasource.master1slave0.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.master1slave0.defaultAutoCommit=false
#sharding.jdbc.datasource.master1slave0.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.master1slave0.filter.wall.enabled=true

#未配置分片规则的表将通过默认数据源定位
sharding.jdbc.config.sharding.default-data-source-name=master
sharding.jdbc.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master.url=jdbc:mysql://10.253.1.22:3306/master
sharding.jdbc.datasource.master.username=root
sharding.jdbc.datasource.master.password=123456
#sharding.jdbc.datasource.master.filters=stat
#sharding.jdbc.datasource.master.maxActive=100
#sharding.jdbc.datasource.master.initialSize=10
#sharding.jdbc.datasource.master.maxWait=60000
#sharding.jdbc.datasource.master.minIdle=0
#sharding.jdbc.datasource.master.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.master.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.master.testWhileIdle=true
#sharding.jdbc.datasource.master.testOnBorrow=true
#sharding.jdbc.datasource.master.testOnReturn=false
#sharding.jdbc.datasource.master.removeAbandoned=true
#sharding.jdbc.datasource.master.removeAbandonedTimeout=180
#sharding.jdbc.datasource.master.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.master.defaultAutoCommit=false
#sharding.jdbc.datasource.master.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.master.filter.wall.enabled=true
sharding.jdbc.datasource.slave.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.slave.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave.url=jdbc:mysql://10.253.1.52:3306/slave
sharding.jdbc.datasource.slave.username=root
sharding.jdbc.datasource.slave.password=123456
#sharding.jdbc.datasource.slave.filters=stat
#sharding.jdbc.datasource.slave.maxActive=100
#sharding.jdbc.datasource.slave.initialSize=10
#sharding.jdbc.datasource.slave.maxWait=60000
#sharding.jdbc.datasource.slave.minIdle=0
#sharding.jdbc.datasource.slave.timeBetweenEvictionRunsMillis=3000
#sharding.jdbc.datasource.slave.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.slave.validationQuery=SELECT 1 from dual
#sharding.jdbc.datasource.slave.testWhileIdle=true
#sharding.jdbc.datasource.slave.testOnBorrow=true
#sharding.jdbc.datasource.slave.testOnReturn=false
#sharding.jdbc.datasource.slave.removeAbandoned=true
#sharding.jdbc.datasource.slave.removeAbandonedTimeout=180
#sharding.jdbc.datasource.slave.connectionProperties=druid.stat.slowSqlMillis=3000
#sharding.jdbc.datasource.slave.defaultAutoCommit=false
#sharding.jdbc.datasource.slave.filter.stat.log-slow-sql=true
#sharding.jdbc.datasource.slave.filter.wall.enabled=true

#sharding.jdbc.config.sharding.tables.t_order.database-strategy.hint.algorithm-class-name=com.bozy.cloud.sampleshardingjdbc.algorithm.DatabaseHintShardingAlogrithm
#sharding.jdbc.config.sharding.tables.t_order.table-strategy.hint.algorithm-class-name=com.bozy.cloud.sampleshardingjdbc.algorithm.TableHintShardingAlogrithm
#sharding.jdbc.config.sharding.tables.t_order_item.database-strategy.hint.algorithm-class-name=com.bozy.cloud.sampleshardingjdbc.algorithm.DatabaseHintShardingAlogrithm
#sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.hint.algorithm-class-name=com.bozy.cloud.sampleshardingjdbc.algorithm.TableHintShardingAlogrithm
#sharding.jdbc.config.sharding.default-table-strategy.hint.algorithm-class-name=com.bozy.cloud.sampleshardingjdbc.algorithm.TableHintShardingAlogrithm
#sharding.jdbc.config.sharding.default-database-strategy.hint.algorithm-class-name=

#行表达式分片策略
#分片(分库)列键
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
#行表达式,分片(分库)算法,${...}或$->{...}
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#tables.<logic-table-name>.actual-data-nodes；
#由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。
# 缺省表示使用已知数据源与逻辑表名称生成数据节点。
# 用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}

#分表策略,同分库策略,使用‘行表达式分表策略’
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
#自增列名称，缺省表示不使用自增主键生成器
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id
#自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
#sharding.jdbc.config.sharding.tables.t_order.key-generator.type=SNOWFLAKE
#sharding.jdbc.config.sharding.tables.t_order.key-generator-class-name=io.shardingjdbc.core.keygen.DefaultKeyGenerator
#自增列值生成器属性配置, 比如SNOWFLAKE算法的worker.id与max.tolerate.time.difference.milliseconds
#sharding.jdbc.config.sharding.tables.t_order.key-generator.props.<property-name>=

sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}

sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id
#sharding.jdbc.config.sharding.tables.t_order_item.key-generator-class-name=io.shardingjdbc.core.keygen.DefaultKeyGenerator
sharding.jdbc.config.sharding.binding-tables=t_order,t_order_item
#sharding.jdbc.config.sharding.broadcast-tables=t_config

#分片数据源对应主从库配置
sharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name=master0
sharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names=master0slave0
#sharding.jdbc.config.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin
sharding.jdbc.config.sharding.master-slave-rules.ds1.master-data-source-name=master1
sharding.jdbc.config.sharding.master-slave-rules.ds1.slave-data-source-names=master1slave0
#sharding.jdbc.config.sharding.master-slave-rules.ds1.load-balance-algorithm-type=round_robin
#默认数据源主从库配置
sharding.jdbc.config.sharding.master-slave-rules.ds.master-data-source-name=master
sharding.jdbc.config.sharding.master-slave-rules.ds.slave-data-source-names=slave
#sharding.jdbc.config.sharding.master-slave-rules.ds.load-balance-algorithm-type=round_robin

#sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-type= #从库负载均衡算法类型，可选值：ROUND_ROBIN，RANDOM。若`load-balance-algorithm-class-name`存在则忽略该配置
sharding.jdbc.config.masterslave.load-balance-algorithm-type=round_robin

#是否开启SQL显示，默认值: false;只开启读写分离,没有分库分表时,即使设置成true也是不会打印sql的,故需要在分库分表的基础之上才能生效.
sharding.jdbc.config.props.sql.show=true
#工作线程数量，默认值: CPU核数
#sharding.jdbc.config.sharding.props.executor.size=

#线程池配置
#线程池所使用的缓冲队列
thread.pool.queueCapacity=500
#线程池维护线程的最少数量
thread.pool.corePoolSize=10
#线程池维护线程的最大数量
thread.pool.maxPoolSize=1000
#线程池维护线程所允许的空闲时间
thread.pool.kepAliveSeconds=60